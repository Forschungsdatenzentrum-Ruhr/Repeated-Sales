c = b %>% mutate(
1 %in% .
)
c = b %>% gather()
c = b %>% mutate(
sum(. == -1)!= 0 ~ -1
)
c = b %>% mutate(
~sum(. == -1)!= 0 ~ -1
)
c = b %>% mutate(
sum(. == -1)=! 0 ~ -1
)
c = b %>% mutate(
sum(. == -1)
)
c = b %>% rowwise()%>%mutate(
sum(. == -1)
)
c = b %>% mutate( across(everything(),
~sum(. == -1)
)
)
View(b)
c = b %>% rowwise() %>% sum()
c = b %>% rowwise() %>% sum(-1 %in% .)
c = b %>% rowwise() %>% sum(-1 == .)
b  = test %>% summarise(across(starts_with("V"),
~case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1)
)
)
c = b %>% summarise(across(starts_with("V"),
~case_when(-1 %in% . ~ -1)))
View(c)
c = b %>% summarise(across(starts_with("V"),
~case_when(-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)))
c = b %>% summarise(across(starts_with("V"),
~case_when(-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
))) %>% t() %>% cbind(col_list,c)
View(c)
c = b %>% summarise(across(starts_with("V"),
~case_when(-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
))) %>% t()
col_list$repeated_id = c
View(col_list)
install.packages("styler")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
inital <- t(col_list[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column()
inital %<>% merge(offsets, by = "rowname", all.x = T) %>% summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
) %>% merge( t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
mutate(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
View(inital)
inital <- t(col_list[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column()
inital %<>% merge(offsets, by = "rowname", all.x = T) %>% summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
) %>%
repeated <- merge( t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
inital <- t(col_list[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column()
inital %<>% merge(offsets, by = "rowname", all.x = T) %>% summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
repeated <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
View(repeated)
View(test)
repeated <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0)
View(repeated)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
)
repeated <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>% slice(-1) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>% slice(-1)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0)
repeated <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0)
View(repeated)
inital <- t(col_list[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column()
inital %<>% merge(offsets, by = "rowname", all.x = T) %>% summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
col_list <- latlon_utm %>% select(etage, zimmeranzahl, wohnflaeche, counting_id)
inital <- t(col_list[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column()
inital %<>% merge(offsets, by = "rowname", all.x = T) %>% summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
repeated <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
)
View(repeated)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>% slice(-1)
merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>% slice(-1) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
col_list$repeated_id <- merge(inital ,t(col_list), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>% slice(-1) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
View(col_list)
tar_manifest()
library(targets)
tar_manifest()
tar_manifest()
######################
#Package Install and Load
######################
req_library = c(
"targets",
"tarchetypes",
"future",
"future.callr"
)
#used during execution of pipeline
pipeline_library = c(
"here", # creating dynamic paths based on script location
"haven", # reading/writing of dta files
"tidyverse", # data manipulation/wrangeling
"magrittr", #two sided pipe
"fst" # logging utilites
)
#rerun this if packages are changed/missing
#stuff needs to be hard installed for it to be available to parallel
full_library = c(req_library,pipeline_library)
for(package in 1:length(full_library)){
install.packages(full_library[package])
}
for(package in 1:length(pipeline_library)){
install.packages(pipeline_library[package])
}
tar_manifest()
tar_manifest()
library(haven)
library(renv)
renv::init(bare = T)
######################
#Package Install and Load
######################
req_library = c(
"targets",
"tarchetypes",
"future",
"future.callr"
)
#used during execution of pipeline
pipeline_library = c(
"here", # creating dynamic paths based on script location
"haven", # reading/writing of dta files
"tidyverse", # data manipulation/wrangeling
"magrittr", #two sided pipe
"fst" # logging utilites
)
#rerun this if packages are changed/missing
#stuff needs to be hard installed for it to be available to parallel
full_library = c(req_library,pipeline_library)
for(package in 1:length(full_library)){
install.packages(full_library[package])
}
######################
#Package Install and Load
######################
req_library = c(
#  "targets",
"tarchetypes",
"future",
"future.callr"
)
#used during execution of pipeline
pipeline_library = c(
"here", # creating dynamic paths based on script location
"haven", # reading/writing of dta files
"tidyverse", # data manipulation/wrangeling
"magrittr", #two sided pipe
"fst" # logging utilites
)
#rerun this if packages are changed/missing
#stuff needs to be hard installed for it to be available to parallel
full_library = c(req_library,pipeline_library)
for(package in 1:length(full_library)){
install.packages(full_library[package])
}
######################
#Package Install and Load
######################
req_library = c(
#  "targets",
#  "tarchetypes",
#  "future",
#  "future.callr"
)
#used during execution of pipeline
pipeline_library = c(
"here", # creating dynamic paths based on script location
"haven", # reading/writing of dta files
"tidyverse", # data manipulation/wrangeling
"magrittr", #two sided pipe
"fst" # logging utilites
)
#rerun this if packages are changed/missing
#stuff needs to be hard installed for it to be available to parallel
full_library = c(req_library,pipeline_library)
for(package in 1:length(full_library)){
install.packages(full_library[package])
}
#used during execution of pipeline
library(here)
library(haven)
library(tidyverse)
library(magrittr)
#used during setup of pipeline
library(targets)
install.packages("targets")
install.packages("targets")
renv::purge(targets)
renv::purge("targets")
renv::settings$use.cache(FALSE)
install.packages("targets")
install.packages("future")
install.packages("future.callr")
install.packages("targets")
remove.packages("targets")
renv::update("targets")
#used during setup of pipeline
library(targets)
install.packages("targets")
?install.packages
url = "https://cloud.r-project.org/src/contrib/targets_0.12.1.tar.gz"
install.packages(url, repos = NULL, type = "source")
install.packages("devtools")
devtools::install_github("ropensci/targets")
#used during setup of pipeline
library(targets)
install.packages("tarchetypes")
