fifelse(.SD<0, .SD, NA),
.SDcols = var_of_interest
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
fifelse(.SD<0, .SD, NA),
.SDcols = var_of_interest
]
var_of_interest = c(
"blid",
"wohnflaeche",
"amonths",
"emonths",
"zimmeranzahl",
"etage",
"mietekalt",
"kaufpreis")
)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
fifelse(.SD<0, .SD, NA),
.SDcols = var_of_interest
]
var_of_interest = c(
## general info
"blid",
"ajahr",
"ejahr",
"amonth",
"emonth",
## object info
"wohnflaeche",
"zimmeranzahl",
"etage",
"mietekalt",
"kaufpreis")
RED[1:10000]
RED = RED[1:10000]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
fifelse(.SD<0, .SD, NA),
.SDcols = var_of_interest
]
var_of_interest = c(
## general info
"blid",
"ajahr",
"ejahr",
"amonat",
"emonat",
## object info
"wohnflaeche",
"zimmeranzahl",
"etage",
"mietekalt",
"kaufpreis")
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
fifelse(.SD<0, .SD, NA),
.SDcols = var_of_interest
]
?set
??set
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
var_of_interest
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
var_of_interest,
with = FALSE
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
]
var_of_interest = c(
## general info
"blid",
"ajahr",
"ejahr",
"amonat",
"emonat",
## object info
"wohnflaeche",
"zimmeranzahl",
"etage",
"mietekalt",
"kaufpreis",
"lat_utm",
"lon_utm")
)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
]
head(RED)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
]
RED = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
]
RED[
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
] |>
setkey = c("blid","counting_id","latlon_utm")
RED[
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
]
RED[
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
] %>%
setkey = c("blid","counting_id","latlon_utm")
tst = RED[
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
]
head(tst)
View(tst)
RED = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables and recode values < 0 to NA
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
#     data_end_date = max(emonths)
)
]
setkey(RED,c("blid","counting_id","latlon_utm"))
head(RED)
# read stata file and remove labels
RED = haven::read_dta(RED_file_name) |>
haven::zap_labels() |>
data.table::setDT()
warnings()
RED = head(RED, n = 10000)
RED2 = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
setkey(RED2,c("blid","latlon_utm"))
head(RED2)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
setkey(RED,c("blid","latlon_utm"))
head(RED)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
head(RED)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
]
head(RED)
RED2 = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
RED""
RED2
head(RED2)
RED2 = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
]
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
]
RED[
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
summary(RED)
backup = RED
RED = RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N
# get enddate of date
# data_end_date = max(emonths)
)
]
setkey(RED,c("blid","latlon_utm"))
names(RED)
setkey(RED,c("blid","latlon_utm"))
setkey(RED,blid,latlon_utm)
# recode negative values to NA
# little more convoluted but way faster variant of RED[RED < 0] <- NA
for(col in names(RED)){
set(RED, i=which(RED[[col]]<0), j = col, value = NA)
}
head(RED)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N,
# cleanup
ajahr = NULL,
amonat = NULL,
ejahr = NULL,
emonat = NULL,
mietekalt = NULL,
kaufpreis = NULL
# get enddate of date
# data_end_date = max(emonths)
)
]
setkey(RED,blid,latlon_utm)
# recode negative values to NA
# little more convoluted but way faster variant of RED[RED < 0] <- NA
for(col in names(RED)){
set(RED, i=which(RED[[col]]<0), j = col, value = NA)
}
head(RED)
RED = backup
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
][
,
## mutations
":="(
# combine coordinates
latlon_utm = paste0(lat_utm, lon_utm),
# transform years into months and add running years months
amonths = ajahr * 12 + amonat,
emonths = ejahr * 12 + emonat,
# combine price and rent into one variable
price_var = pmax(mietekalt, kaufpreis),
# create unique id for entire data
counting_id = 1:.N,
# cleanup
ajahr = NULL,
amonat = NULL,
ejahr = NULL,
emonat = NULL,
mietekalt = NULL,
kaufpreis = NULL
# get enddate of date
# data_end_date = max(emonths)
)
]
setkey(RED,blid,latlon_utm)
head(RED)
RED[
# drop missing coordinates
lat_utm > 0 | lon_utm > 0,
# keep only relevant variables
..var_of_interest
]
head(RED)
