#removal <- function(geo_grouped_data = NA) {
#' @title WIP
#'
#' @description WIP
#' @param WIP
#' @param WIP
#' @note
#'
#' @return WIP
#' @author Thorben Wiebe
#----------------------------------------------
categories <- range_offsets["category"] |> pull()
#backup = geo_grouped_data
#geo_grouped_data = geo_grouped_data[latlon_utm == "5878499.91877856482091.18037048"]


duplicates <- duplicated(geo_grouped_data[, ..categories])

first_occurence_ids = geo_grouped_data[!duplicates, counting_id]
unique_combinations = geo_grouped_data[!duplicates,..categories]

setkey(unique_combinations, wohnflaeche, etage, zimmeranzahl)

out_1 = out_2 <- list()

for (i in 1:nrow(unqiue_combinations)) {
  
  # percentage of rooms scaled values are allowed to be off
  # e.g. what percentage of 8 rooms is 0.5 rooms
  # this feels way to complicated
  scaled_zimmeranzahl_r_o <- unique_combinations[,
                               (as.numeric(unique_combinations[i, "zimmeranzahl"]) + zimmeranzahl_r_o)
                               / as.numeric(unique_combinations[i, "zimmeranzahl"]) - 1
  ]
  
  data_to_sim <- scale(unique_combinations, center = F, scale = unique_combinations[i]) |> as.data.table()
  
  out_1[[i]] = data_to_sim[, .(fcase(
    ## exact repeat
    # percentage deviation acceptable
    abs(1 - wohnflaeche) <= wohnflaeche_e_o &
      # zimmeranzahl and etage are exact matches
      zimmeranzahl == 1 &
      etage == 1,
    0,
    
    ## similar repeat
    # percentage deviation acceptable
    abs(1 - wohnflaeche) <= wohnflaeche_r_o &
      # zimmeranzahl deviation acceptable
      abs(1 - zimmeranzahl) <= scaled_zimmeranzahl_r_o,
    1,
    
    # no matches
    default = NA
  ))] |> as.matrix()
  
  out_2[[i]] <- as.matrix(dist(data_to_sim, method = "euclidean"))[i, ]
  
  
}
out_2 = as.data.table(out_2)
out_1 = as.data.table(out_1)

clustering = cluster$new(
  options = out_1,
  means = rowMeans(out_1 * out_2, na.rm = T)
)

clustering$determine_cluster_centers()

geo_grouped_data[
  clustering$centers,
  by = counting_id
]


# }
