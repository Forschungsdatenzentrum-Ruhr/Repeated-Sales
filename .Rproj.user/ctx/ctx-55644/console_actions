{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        2,
        3,
        3,
        0,
        1,
        2,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "+ ",
        "  return(repeated_id)",
        "+ ",
        "}",
        "> ",
        "between_ext(latlon_utm)",
        "Error in between_ext(latlon_utm) : object 'input_offsets' not found\n",
        "> ",
        "input_offsets <- tibble::tribble(",
        "+ ",
        "  ~rowname, ~similar_offset, ~exact_offset, ~offset_type,",
        "+ ",
        "  \"wohnflaeche\", 0.1, 0.05, \"multi\",",
        "+ ",
        "  \"etage\", 99, 0, \"add\",",
        "+ ",
        "  \"zimmeranzahl\", 0.5, 0, \"add\",",
        "+ ",
        "  \"time\", 0, 6, NA",
        "+ ",
        ")",
        "> ",
        "between_ext <- function(data, offsets = input_offsets) {",
        "+ ",
        "",
        "+ ",
        "  # drop time for now",
        "+ ",
        "  col_names <- offsets$rowname[!offsets$rowname == \"time\"]",
        "+ ",
        "",
        "+ ",
        "  data %<>% select(col_names)",
        "+ ",
        "",
        "+ ",
        "  inital <- t(data[1, ]) %>%",
        "+ ",
        "    as_tibble(rownames = NA) %>%",
        "+ ",
        "    set_colnames(\"baseline\") %>%",
        "+ ",
        "    rownames_to_column() %>%",
        "+ ",
        "    merge(offsets, by = \"rowname\", all.x = T) %>%",
        "+ ",
        "    summarise(",
        "+ ",
        "      rowname = rowname,",
        "+ ",
        "      similar_left = case_when(",
        "+ ",
        "        offset_type == \"add\" ~ baseline - similar_offset,",
        "+ ",
        "        offset_type == \"multi\" ~ baseline * (1 - similar_offset)",
        "+ ",
        "      ),",
        "+ ",
        "      similar_right = case_when(",
        "+ ",
        "        offset_type == \"add\" ~ baseline + similar_offset,",
        "+ ",
        "        offset_type == \"multi\" ~ baseline * (1 + similar_offset)",
        "+ ",
        "      ),",
        "+ ",
        "      exact_left = case_when(",
        "+ ",
        "        offset_type == \"add\" ~ baseline - exact_offset,",
        "+ ",
        "        offset_type == \"multi\" ~ baseline * (1 - exact_offset)",
        "+ ",
        "      ),",
        "+ ",
        "      exact_right = case_when(",
        "+ ",
        "        offset_type == \"add\" ~ baseline + exact_offset,",
        "+ ",
        "        offset_type == \"multi\" ~ baseline * (1 + exact_offset)",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "  ",
        "+ ",
        "  repeated_id <- merge(inital, t(data), by.x = \"rowname\", by.y = 0) %>%",
        "+ ",
        "    summarise(",
        "+ ",
        "      across(",
        "+ ",
        "        starts_with(\"V\"),",
        "+ ",
        "        ~ case_when(",
        "+ ",
        "          . >= exact_left & exact_right >= . ~ 1,",
        "+ ",
        "          . >= similar_left & similar_right >= . ~ 0,",
        "+ ",
        "          TRUE ~ -1",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "    summarise(",
        "+ ",
        "      across(",
        "+ ",
        "        starts_with(\"V\"),",
        "+ ",
        "        ~ case_when(",
        "+ ",
        "          -1 %in% . ~ -1,",
        "+ ",
        "          0 %in% . ~ 0,",
        "+ ",
        "          TRUE ~ 1",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    ) %>% t()",
        "+ ",
        "  ",
        "+ ",
        "  return(repeated_id)",
        "+ ",
        "}",
        "> ",
        "between_ext(latlon_utm)",
        "   [,1]\nV1    1\nV2    1\nV3    1\nV4   -1\nV5   -1\nV6   -1\nV7   -1\n",
        "> ",
        "latlon_utm %>%  between_ext()",
        "   [,1]\nV1    1\nV2    1\nV3    1\nV4   -1\nV5   -1\nV6   -1\nV7   -1\n",
        "> ",
        "latlon_utm %>% mutate(repeated_id = between_ext())",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`mutate()`\u001B[39m:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing `repeated_id = between_ext()`.\u001B[39m\n\u001B[1mCaused by error in \u001B[38;5;232m`select()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m argument \"data\" is missing, with no default\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "latlon_utm %>% mutate(repeated_id = between_ext(.))",
        "\u001B[38;5;246m# A tibble: 7 x 99\u001B[39m\n       obid     gkz   plz miete~1 miete~2 neben~3 kaufp~4 miete~5 heizk~6 baujahr letzt~7 wohnf~8 grund~9\n  \u001B[3m\u001B[38;5;246m<dbl+lbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m\n",
        "\u001B[38;5;250m1\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m5\u001B[24m\u001B[4m8\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m2\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m5\u001B[24m\u001B[4m8\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;250m3\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m2\u001B[24m\u001B[4m6\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m4\u001B[39m  94\u001B[4m1\u001B[24m\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m162 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;250m5\u001B[39m  94\u001B[4m1\u001B[24m\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m162 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m9\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m985      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m6\u001B[39m  94\u001B[4m8\u001B[24m\u001B[4m5\u001B[24m\u001B[4m8\u001B[24m379 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m980      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;250m7\u001B[39m  95\u001B[4m3\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m773 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m980      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n\u001B[38;5;246m# ... with 86 more variables: nutzflaeche <dbl+lbl>, etage <dbl+lbl>, anzahletagen <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   zimmeranzahl <dbl+lbl>, nebenraeume <dbl+lbl>, schlafzimmer <dbl+lbl>, badezimmer <dbl+lbl>,\u001B[39m\n",
        "\u001B[38;5;246m#   parkplatzpreis <dbl+lbl>, wohngeld <dbl+lbl>, ev_kennwert <dbl+lbl>, laufzeittage <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   hits <dbl+lbl>, click_schnellkontakte <dbl+lbl>, click_customer <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   click_weitersagen <dbl+lbl>, click_url <dbl+lbl>, immobilientyp <dbl+lbl>, ajahr <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   amonat <dbl+lbl>, ejahr <dbl+lbl>, emonat <dbl+lbl>, aufzug <dbl+lbl>, balkon <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   betreut <dbl+lbl>, denkmalobjekt <dbl+lbl>, einbaukueche <dbl+lbl>, einliegerwohnung <dbl+lbl>, ...\u001B[39m\n",
        "\u001B[38;5;246m# i Use `colnames()` to see all variable names\u001B[39m\n",
        "> ",
        "latlon_utm %>% summarise(repeated_id = between_ext(.))",
        "\u001B[38;5;246m# A tibble: 7 x 1\u001B[39m\n  repeated_id[,1]\n            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m               1\n\u001B[38;5;250m2\u001B[39m               1\n\u001B[38;5;250m3\u001B[39m               1\n\u001B[38;5;250m4\u001B[39m              -\u001B[31m1\u001B[39m\n\u001B[38;5;250m5\u001B[39m              -\u001B[31m1\u001B[39m\n\u001B[38;5;250m6\u001B[39m              -\u001B[31m1\u001B[39m\n\u001B[38;5;250m7\u001B[39m              -\u001B[31m1\u001B[39m\n",
        "> ",
        "  latlon_utm %<>% arrange(amonths) %>% mutate(repeated_id = between_ext(.))",
        "> ",
        "  ?while",
        "+ ",
        "> ",
        "    candidates = latlon_utm %>% filter(repeated_id != -1) %>% mutate(",
        "+ ",
        "      #to last date in data",
        "+ ",
        "      td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "      ",
        "+ ",
        "      #of leading offering",
        "+ ",
        "      td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "      ",
        "+ ",
        "      #replace last td_of_lead with td_to_end",
        "+ ",
        "      td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "    )",
        "> ",
        "View(candidates)",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "    candidates = latlon_utm %>% mutate(repeated_id = between_ext(.))  %>%",
        "+ ",
        "      filter(repeated_id != -1) %>% mutate(",
        "+ ",
        "      #to last date in data",
        "+ ",
        "      td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "      ",
        "+ ",
        "      #of leading offering",
        "+ ",
        "      td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "      ",
        "+ ",
        "      #replace last td_of_lead with td_to_end",
        "+ ",
        "      td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "    )",
        "> ",
        "input_offsets$exact_offset",
        "[1] 0.05 0.00 0.00 6.00\n",
        "> ",
        "input_offsets$exact_offset[\"time\"]",
        "[1] NA\n",
        "> ",
        "  input_offsets == \"time\"",
        "     rowname similar_offset exact_offset offset_type\n[1,]   FALSE          FALSE        FALSE       FALSE\n[2,]   FALSE          FALSE        FALSE       FALSE\n[3,]   FALSE          FALSE        FALSE       FALSE\n[4,]    TRUE          FALSE        FALSE          NA\n",
        "> ",
        "  colnames(input_offsets) == \"time\"",
        "[1] FALSE FALSE FALSE FALSE\n",
        "> ",
        "  colnames(input_offsets)",
        "[1] \"rowname\"        \"similar_offset\" \"exact_offset\"   \"offset_type\"   \n",
        "> ",
        "  input_offsets$rowname == \"time\"",
        "[1] FALSE FALSE FALSE  TRUE\n",
        "> ",
        "  time_offset = input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "> ",
        "    candidates = latlon_utm %>% mutate(repeated_id = between_ext(.))  %>%",
        "+ ",
        "      filter(repeated_id != -1) %>% mutate(",
        "+ ",
        "        #to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "        ",
        "+ ",
        "        #of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "        ",
        "+ ",
        "        #replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) %>% filter(td_of_lead >= time_offset)",
        "> ",
        "styler:::style_active_file()",
        "Using style transformers `styler::tidyverse_style()`\n",
        "> ",
        "    latlon_utm$counting_id[1]",
        "[1] 103939\n",
        "> ",
        "    repeated_offerings <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) %>%",
        "+ ",
        "      filter(td_of_lead >= time_offset)",
        "> ",
        "    ids_to_remove = c(",
        "+ ",
        "      latlon_utm$counting_id[1],",
        "+ ",
        "      repeated_offerings$counting_id",
        "+ ",
        "    )",
        "> ",
        "    latlon_utm$counting_id %in% ids_to_remove",
        "[1]  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE\n",
        "> ",
        "    latlon_utm %<>% filter(counting_id %in% ids_to_remove)",
        "> ",
        "View(repeated_offerings)",
        "> ",
        "a = latlon_utm",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "classify_data <- function(latlon_utm) {",
        "+ ",
        "  ",
        "+ ",
        "  #move this to settings file or something?",
        "+ ",
        "  input_offsets <<- tibble::tribble(",
        "+ ",
        "    ~rowname, ~similar_offset, ~exact_offset, ~offset_type,",
        "+ ",
        "    \"wohnflaeche\", 0.1, 0.05, \"multi\",",
        "+ ",
        "    \"etage\", 99, 0, \"add\",",
        "+ ",
        "    \"zimmeranzahl\", 0.5, 0, \"add\",",
        "+ ",
        "    \"time\", 0, 6, NA",
        "+ ",
        "  )",
        "+ ",
        "",
        "+ ",
        "  latlon_utm %<>% arrange(amonths)",
        "+ ",
        "",
        "+ ",
        "  # extract time offset for readability",
        "+ ",
        "  time_offset <- input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "+ ",
        "",
        "+ ",
        "  while (nrow(latlon_utm) > 0) {",
        "+ ",
        "    repeates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) %>%",
        "+ ",
        "      filter(td_of_lead >= time_offset)",
        "+ ",
        "    ",
        "+ ",
        "    ids_to_remove = unique(c(",
        "+ ",
        "      latlon_utm$counting_id[1],",
        "+ ",
        "      repeated_offerings$counting_id",
        "+ ",
        "    ))",
        "+ ",
        "    ",
        "+ ",
        "    latlon_utm %<>% filter(!counting_id %in% ids_to_remove)",
        "+ ",
        "    repeated_offerings %<>% bind_rows(repeates)",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        " ",
        "+ ",
        "  return(repeated_offerings)",
        "+ ",
        "}",
        "> ",
        "classify_data(latlon_utm = latlon_utm)",
        "\u001B[38;5;246m# A tibble: 6 x 101\u001B[39m\n       obid     gkz   plz miete~1 miete~2 neben~3 kaufp~4 miete~5 heizk~6 baujahr letzt~7 wohnf~8 grund~9\n  \u001B[3m\u001B[38;5;246m<dbl+lbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl+l>\u001B[39m\u001B[23m\n",
        "\u001B[38;5;250m1\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m2\u001B[24m\u001B[4m6\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m2\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m2\u001B[24m\u001B[4m6\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;250m3\u001B[39m  68\u001B[4m0\u001B[24m\u001B[4m1\u001B[24m\u001B[4m3\u001B[24m515 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m5\u001B[24m\u001B[4m8\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      74      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m4\u001B[39m  94\u001B[4m1\u001B[24m\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m162 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m9\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m985      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;250m5\u001B[39m  94\u001B[4m1\u001B[24m\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m162 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m   \u001B[4m9\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m985      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n\u001B[38;5;250m6\u001B[39m  95\u001B[4m3\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m773 1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m3\u001B[24m083 \u001B[4m2\u001B[24m\u001B[4m1\u001B[24m481      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m000      \u001B[31mNA\u001B[39m      \u001B[31mNA\u001B[39m    \u001B[4m1\u001B[24m980      \u001B[31mNA\u001B[39m      98      \u001B[31mNA\u001B[39m\n",
        "\u001B[38;5;246m# ... with 88 more variables: nutzflaeche <dbl+lbl>, etage <dbl+lbl>, anzahletagen <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   zimmeranzahl <dbl+lbl>, nebenraeume <dbl+lbl>, schlafzimmer <dbl+lbl>, badezimmer <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   parkplatzpreis <dbl+lbl>, wohngeld <dbl+lbl>, ev_kennwert <dbl+lbl>, laufzeittage <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   hits <dbl+lbl>, click_schnellkontakte <dbl+lbl>, click_customer <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   click_weitersagen <dbl+lbl>, click_url <dbl+lbl>, immobilientyp <dbl+lbl>, ajahr <dbl+lbl>,\u001B[39m\n",
        "\u001B[38;5;246m#   amonat <dbl+lbl>, ejahr <dbl+lbl>, emonat <dbl+lbl>, aufzug <dbl+lbl>, balkon <dbl+lbl>,\u001B[39m\n\u001B[38;5;246m#   betreut <dbl+lbl>, denkmalobjekt <dbl+lbl>, einbaukueche <dbl+lbl>, einliegerwohnung <dbl+lbl>, ...\u001B[39m\n\u001B[38;5;246m# i Use `colnames()` to see all variable names\u001B[39m\n",
        "> ",
        "b = classify_data(latlon_utm = latlon_utm)",
        "> ",
        "View(b)",
        "> ",
        "View(latlon_utm)",
        "> ",
        "repeates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      )",
        "> ",
        "View(repeates)",
        "> ",
        "    repeates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "> ",
        "    repeates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "> ",
        "    latlon_utm %<>% filter(!counting_id %in% repeates$counting_id)",
        "> ",
        "    repeated_offerings %<>% filter(td_of_lead >= time_offset) %>% bind_rows(repeates)",
        "> ",
        "View(repeated_offerings)",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "    repeates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "> ",
        "    latlon_utm %<>% filter(!counting_id %in% repeates$counting_id)",
        "> ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "> ",
        "    latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "> ",
        "    latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)",
        "> ",
        "    rm(repeated_offerings)",
        "> ",
        "    repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)",
        "Error in list2(...) : object 'repeated_offerings' not found\n",
        "> ",
        "  repeated_offerings = c()",
        "> ",
        "    repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)",
        "> ",
        "    next",
        "Error: no loop for break/next, jumping to top level\n",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "  repeated_offerings = c()",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "  # extract time offset for readability",
        "> ",
        "  time_offset <- input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "> ",
        "  while (nrow(latlon_utm) > 0) {",
        "+ ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      ) ",
        "+ ",
        "    ",
        "+ ",
        "    latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)",
        "+ ",
        "    repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)",
        "+ ",
        "  }",
        "> ",
        "View(repeated_offerings)",
        "> ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),",
        "+ ",
        "        ",
        "+ ",
        "        obj_parent = counting_id[1]",
        "+ ",
        "      ) ",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`mutate()`\u001B[39m:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing `td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])`.\u001B[39m\n\u001B[1mCaused by error in \u001B[38;5;232m`check_replacement()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Replacement for `data` is length 0, not length 1.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "  repeated_offerings = c()",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "  # extract time offset for readability",
        "> ",
        "  time_offset <- input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "> ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),",
        "+ ",
        "        ",
        "+ ",
        "        obj_parent = counting_id[1]",
        "+ ",
        "      ) ",
        "> ",
        "    candidates$obj_parent",
        "[1] 103939 103939 103939\n",
        "> ",
        "latlon_utm = tar_read(classification_1_8fe5d5e3)",
        "> ",
        "View(latlon_utm)",
        "> ",
        "    ids_to_remove = candidates$counting_id[candidates$counting_id == 1]",
        "> ",
        "    candidates$counting_id",
        "[1] 103939 103940 103941\n",
        "> ",
        "    ids_to_remove = candidates$counting_id[candidates$repeated_id == 1]",
        "> ",
        "latlon_utm = tar_read(classification_1_7ea63a6c)",
        "> ",
        "  repeated_offerings = c()",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "  # extract time offset for readability",
        "> ",
        "  time_offset <- input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "> ",
        "  while (nrow(latlon_utm) > 0) {",
        "+ ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),",
        "+ ",
        "        ",
        "+ ",
        "        obj_parent = counting_id[1]",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ids_to_remove = candidates$counting_id[candidates$repeated_id == 1]",
        "+ ",
        "    ",
        "+ ",
        "    latlon_utm %<>% filter(!counting_id %in% ids_to_remove)",
        "+ ",
        "    ",
        "+ ",
        "    repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)",
        "+ ",
        "  }",
        "> ",
        "View(repeated_offerings)",
        "> ",
        "styler:::style_active_file()",
        "Using style transformers `styler::tidyverse_style()`\n",
        "> ",
        "latlon_utm <- tar_read(classification_1_7ea63a6c)",
        "> ",
        "  repeated_offerings <- c()",
        "> ",
        "  latlon_utm %<>% arrange(amonths)",
        "> ",
        "  # extract time offset for readability",
        "> ",
        "  time_offset <- input_offsets$exact_offset[input_offsets$rowname == \"time\"]",
        "> ",
        "  while (nrow(latlon_utm) > 0) {",
        "+ ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      )",
        "+ ",
        "",
        "+ ",
        "    ids_to_remove <- candidates$counting_id[candidates$repeated_id == 1]",
        "+ ",
        "",
        "+ ",
        "    latlon_utm %<>% filter(!counting_id %in% ids_to_remove)",
        "+ ",
        "",
        "+ ",
        "    repeated_offerings <- candidates %>%",
        "+ ",
        "      filter(td_of_lead >= time_offset) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        obj_parent = counting_id[1]",
        "+ ",
        "      ) %>%",
        "+ ",
        "      bind_rows(repeated_offerings)",
        "+ ",
        "  }",
        "> ",
        "View(repeated_offerings)",
        "> ",
        "latlon_utm <- tar_read(classification_1_36a8c90a)",
        "> ",
        "View(latlon_utm)",
        "> ",
        "    candidates <- latlon_utm %>%",
        "+ ",
        "      mutate(repeated_id = between_ext(.)) %>%",
        "+ ",
        "      filter(repeated_id != -1) %>%",
        "+ ",
        "      mutate(",
        "+ ",
        "        # to last date in data",
        "+ ",
        "        td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),",
        "+ ",
        "",
        "+ ",
        "        # of leading offering",
        "+ ",
        "        td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),",
        "+ ",
        "",
        "+ ",
        "        # replace last td_of_lead with td_to_end",
        "+ ",
        "        td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])",
        "+ ",
        "      )",
        "> ",
        "View(candidates)",
        "> ",
        "#run pipelin",
        "> ",
        "library(targets)",
        "> ",
        "tar_visnetwork(targets_only = T)",
        "\u001B[34mi\u001B[39m The package `visNetwork` is required.\n\u001B[31mx\u001B[39m Would you like to install it?\n\n1: Yes\n2: No\n\n",
        "Auswahl: ",
        "Y",
        "Geben Sie Menüpunkt ein oder 0 zum Abbruch\n",
        "Auswahl: ",
        "Yes",
        "Installiere Paket nach ‘C:/Users/twiebe/AppData/Local/R/win-library/4.2’\n(da ‘lib’ nicht spezifiziert)\n",
        "installiere auch Abhängigkeit ‘htmlwidgets’\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/htmlwidgets_1.5.4.zip'\n",
        "Content type 'application/zip'",
        " length 905108 bytes (883 KB)\n",
        "downloaded 883 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/visNetwork_2.1.0.zip'\n",
        "Content type 'application/zip'",
        " length 4923843 bytes (4.7 MB)\n",
        "downloaded 4.7 MB\n\n",
        "Paket ‘htmlwidgets’ erfolgreich ausgepackt und MD5 Summen abgeglichen\nPaket ‘visNetwork’ erfolgreich ausgepackt und MD5 Summen abgeglichen\n\nDie heruntergeladenen Binärpakete sind in \n\tC:\\Users\\twiebe\\AppData\\Local\\Temp\\4\\Rtmpe0Rzr9\\downloaded_packages\n\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\r|\r\r/\r\u001B[31mError in latlon_utm %<>% arrange(amonths) : \r\n  konnte Funktion \"%<>%\" nicht finden\r\n\u001B[39m\r-\r\r\\\r\r \r",
        "\u001B[31mx\u001B[39m Problem with the pipeline.\n",
        "\u001B[36mi\u001B[39m Show errors: tar_meta(fields = error, complete_only = TRUE)\n\u001B[36mi\u001B[39m Learn more: https://books.ropensci.org/targets/debugging.html\n\u001B[1m\u001B[33mError\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m problem with the pipeline.\n",
        "Warning message:\n",
        "Do not use load_data() from {devtools} or {pkgload} to load packages or custom functions/globals for {targets}. If you do, custom functions will go to a package environment where {targets} may not track them, and the loaded data will not be available in parallel workers created by tar_make_clustermq() or tar_make_future(). Read https://books.ropensci.org/targets/packages.html#loading-and-configuring-r-packages and https://books.ropensci.org/targets/packages.html#package-based-invalidation for the correct way to load packages for {targets} pipelines. Warnings like this one are important, but if you must suppress them,  you can do so with Sys.setenv(TAR_WARN = \"false\"). \n",
        "> ",
        "tar_manifest()",
        "\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\u001B[31mError in latlon_utm %<>% arrange(amonths) : \r\n  konnte Funktion \"%<>%\" nicht finden\r\n\u001B[39m\r|\r\r/\r\r \r",
        "\u001B[31mx\u001B[39m Problem with the pipeline.\n",
        "\u001B[36mi\u001B[39m Show errors: tar_meta(fields = error, complete_only = TRUE)\n\u001B[36mi\u001B[39m Learn more: https://books.ropensci.org/targets/debugging.html\n\u001B[1m\u001B[33mError\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m problem with the pipeline.\n",
        "Warning message:\n",
        "Do not use load_data() from {devtools} or {pkgload} to load packages or custom functions/globals for {targets}. If you do, custom functions will go to a package environment where {targets} may not track them, and the loaded data will not be available in parallel workers created by tar_make_clustermq() or tar_make_future(). Read https://books.ropensci.org/targets/packages.html#loading-and-configuring-r-packages and https://books.ropensci.org/targets/packages.html#package-based-invalidation for the correct way to load packages for {targets} pipelines. Warnings like this one are important, but if you must suppress them,  you can do so with Sys.setenv(TAR_WARN = \"false\"). \n",
        "> ",
        "######################",
        "> ",
        "#Package Install and Load",
        "> ",
        "######################",
        "> ",
        "req_library = c(",
        "+ ",
        "  \"targets\",",
        "+ ",
        "  \"tarchetypes\",",
        "+ ",
        "  \"future\",",
        "+ ",
        "  \"future.callr\"",
        "+ ",
        ")",
        "> ",
        "#used during execution of pipeline",
        "> ",
        "pipeline_library = c(",
        "+ ",
        "  \"here\", # creating dynamic paths based on script location",
        "+ ",
        "  \"haven\", # reading/writing of dta files",
        "+ ",
        "  \"tidyverse\", # data manipulation/wrangeling",
        "+ ",
        "  \"magrittr\", #two sided pipe",
        "+ ",
        "  \"fst\" # logging utilites",
        "+ ",
        ")",
        "> ",
        "library(magrittr)",
        "> ",
        "tar_manifest()",
        "\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\r|\r\r/\r\r-\r\r\\\r\u001B[31mError in arrange(., amonths) : konnte Funktion \"arrange\" nicht finden\r\n\u001B[39m\r|\r\r/\r\r \r",
        "\u001B[31mx\u001B[39m Problem with the pipeline.\n",
        "\u001B[36mi\u001B[39m Show errors: tar_meta(fields = error, complete_only = TRUE)\n\u001B[36mi\u001B[39m Learn more: https://books.ropensci.org/targets/debugging.html\n\u001B[1m\u001B[33mError\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m problem with the pipeline.\n",
        "Warning message:\n",
        "Do not use load_data() from {devtools} or {pkgload} to load packages or custom functions/globals for {targets}. If you do, custom functions will go to a package environment where {targets} may not track them, and the loaded data will not be available in parallel workers created by tar_make_clustermq() or tar_make_future(). Read https://books.ropensci.org/targets/packages.html#loading-and-configuring-r-packages and https://books.ropensci.org/targets/packages.html#package-based-invalidation for the correct way to load packages for {targets} pipelines. Warnings like this one are important, but if you must suppress them,  you can do so with Sys.setenv(TAR_WARN = \"false\"). \n",
        "> ",
        "install.packages(\"renv\")",
        "WARNING: Rtools is required to build R packages but no version of Rtools compatible with the currently running version of R was found. Note that the following incompatible version(s) of Rtools were found:\n\n  - Rtools 3.5 (installed at C:\\RBuildTools\\3.5)\n  - Rtools 4.0 (installed at C:\\RBuildTools\\4.0)\n\nPlease download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n",
        "Installiere Paket nach ‘C:/Users/twiebe/AppData/Local/R/win-library/4.2’\n(da ‘lib’ nicht spezifiziert)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/renv_0.15.5.zip'\n",
        "Content type 'application/zip'",
        " length 1914912 bytes (1.8 MB)\n",
        "downloaded 1.8 MB\n\n",
        "Paket ‘renv’ erfolgreich ausgepackt und MD5 Summen abgeglichen\n\nDie heruntergeladenen Binärpakete sind in \n\tC:\\Users\\twiebe\\AppData\\Local\\Temp\\4\\Rtmpe0Rzr9\\downloaded_packages\n",
        "> ",
        "library(renv)",
        "\nAttache Paket: ‘renv’\n\n",
        "Das folgende Objekt ist maskiert ‘package:purrr’:\n\n    modify\n\n",
        "Das folgende Objekt ist maskiert ‘package:future’:\n\n    run\n\n",
        "Die folgenden Objekte sind maskiert von ‘package:stats’:\n\n    embed, update\n\n",
        "Die folgenden Objekte sind maskiert von ‘package:utils’:\n\n    history, upgrade\n\n",
        "Die folgenden Objekte sind maskiert von ‘package:base’:\n\n    autoload, load, remove\n\n",
        "> ",
        "#used during setup of pipeline",
        "> ",
        "renv::init()",
        "\nWelcome to renv!\n\nIt looks like this is your first time using renv. This is a one-time message,\nbriefly describing some of renv's functionality.\n\nrenv maintains a local cache of data on the filesystem, located at:\n\n  - \"C:/Users/twiebe/AppData/Local/R/cache/R/renv\"\n\nThis path can be customized: please see the documentation in `?renv::paths`.\n\nrenv will also write to files within the active project folder, including:\n\n  - A folder 'renv' in the project directory, and\n  - A lockfile called 'renv.lock' in the project directory.\n",
        "\nIn particular, projects using renv will normally use a private, per-project\nR library, in which new packages will be installed. This project library is\nisolated from other R libraries on your system.\n\nIn addition, renv will update files within your project directory, including:\n\n  - .gitignore\n  - .Rbuildignore\n  - .Rprofile\n\nPlease read the introduction vignette with `vignette(\"renv\")` for more information.\nYou can browse the package documentation online at https://rstudio.github.io/renv/.\n",
        "Do you want to proceed? [y/N]: ",
        "y",
        "* \"C:/Users/twiebe/AppData/Local/R/cache/R/renv\" has been created.\n",
        "WARNING: One or more problems were discovered while enumerating dependencies.\n\n",
        "N:/FDZ/Intern/HiWi-Praktikanten/Mitarbeiter/Thorben/repeated offerings/Alt/Parallel.R\n",
        "-------------------------------------------------------------------------------------\n",
        "\n",
        "ERROR 1: N:/FDZ/Intern/HiWi-Praktikanten/Mitarbeiter/Thorben/repeated offerings/Alt/Parallel.R:263:1: unexpected '}'\n262:   }\n263: }\n     ^\n",
        "\n",
        "Please see `?renv::dependencies` for more information.\n",
        "Do you want to proceed? [y/N]: ",
        "y",
        "* Initializing project ...\n* Discovering package dependencies ... Done!\n* Copying packages into the library ... [2/47] \b\b\b\b\b\b\b[3/47] \b\b\b\b\b\b\b[4/47] \b\b\b\b\b\b\b[5/47] \b\b\b\b\b\b\b[6/47] \b\b\b\b\b\b\b[7/47] \b\b\b\b\b\b\b[8/47] \b\b\b\b\b\b\b[9/47] \b\b\b\b\b\b\b[10/47] \b\b\b\b\b\b\b\b[11/47] \b\b\b\b\b\b\b\b[12/47] \b\b\b\b\b\b\b\b[13/47] \b\b\b\b\b\b\b\b[14/47] \b\b\b\b\b\b\b\b[15/47] \b\b\b\b\b\b\b\b[16/47] \b\b\b\b\b\b\b\b[17/47] \b\b\b\b\b\b\b\b[18/47] \b\b\b\b\b\b\b\b[19/47] \b\b\b\b\b\b\b\b[20/47] \b\b\b\b\b\b\b\b[21/47] \b\b\b\b\b\b\b\b[22/47] \b\b\b\b\b\b\b\b[23/47] \b\b\b\b\b\b\b\b[24/47] \b\b\b\b\b\b\b\b[25/47] \b\b\b\b\b\b\b\b[26/47] \b\b\b\b\b\b\b\b[27/47] \b\b\b\b\b\b\b\b[28/47] ",
        "\b\b\b\b\b\b\b\b[29/47] \b\b\b\b\b\b\b\b[30/47] \b\b\b\b\b\b\b\b[31/47] \b\b\b\b\b\b\b\b[32/47] \b\b\b\b\b\b\b\b[33/47] \b\b\b\b\b\b\b\b[34/47] \b\b\b\b\b\b\b\b[35/47] \b\b\b\b\b\b\b\b[36/47] \b\b\b\b\b\b\b\b[37/47] \b\b\b\b\b\b\b\b[38/47] \b\b\b\b\b\b\b\b[39/47] \b\b\b\b\b\b\b\b[40/47] \b\b\b\b\b\b\b\b[41/47] \b\b\b\b\b\b\b\b[42/47] \b\b\b\b\b\b\b\b[43/47] \b\b\b\b\b\b\b\b[44/47] \b\b\b\b\b\b\b\b[45/47] \b\b\b\b\b\b\b\b[46/47] \b\b\b\b\b\b\b\b[47/47] Done!\n* Resolving missing dependencies  ... \nRetrieving 'https://cran.rstudio.com/bin/windows/contrib/4.2/pacman_0.5.1.zip' ...\n\tOK [downloaded 380.7 Kb in 0.3 secs]\nRetrieving 'https://cran.rstudio.com/bin/windows/contrib/4.2/remotes_2.4.2.zip' ...\n",
        "\tOK [downloaded 390 Kb in 0.3 secs]\nInstalling remotes [2.4.2] ...\n\tOK [installed binary]\nCopying remotes [2.4.2] into the cache ...\n\tOK [copied to cache in 0.43 seconds]\nInstalling pacman [0.5.1] ...\n\tOK [installed binary]\nCopying pacman [0.5.1] into the cache ...\n\tOK [copied to cache in 0.73 seconds]\nThe following package(s) will be updated in the lockfile:\n\n# CRAN ===============================\n- Matrix         [* -> 1.4-1]\n- R6             [* -> 2.5.1]\n- Rcpp           [* -> 1.0.9]\n- backports      [* -> 1.4.1]\n",
        "- base64url      [* -> 1.4]\n- callr          [* -> 3.7.1]\n- cli            [* -> 3.3.0]\n- codetools      [* -> 0.2-18]\n- data.table     [* -> 1.14.2]\n- digest         [* -> 0.6.29]\n- dplyr          [* -> 1.0.9]\n- ellipsis       [* -> 0.3.2]\n- evaluate       [* -> 0.15]\n- fansi          [* -> 1.0.3]\n- fs             [* -> 1.5.2]\n- fst            [* -> 0.9.8]\n- fstcore        [* -> 0.9.12]\n- future         [* -> 1.27.0]\n- future.callr   [* -> 0.8.0]\n- generics       [* -> 0.1.3]\n- globals        [* -> 0.15.1]\n",
        "- glue           [* -> 1.6.2]\n- highr          [* -> 0.9]\n- igraph         [* -> 1.3.4]\n- knitr          [* -> 1.39]\n- lattice        [* -> 0.20-45]\n- lifecycle      [* -> 1.0.1]\n- listenv        [* -> 0.8.0]\n- magrittr       [* -> 2.0.3]\n- pacman         [* -> 0.5.1]\n- parallelly     [* -> 1.32.1]\n- pillar         [* -> 1.8.0]\n- pkgconfig      [* -> 2.0.3]\n- processx       [* -> 3.7.0]\n- ps             [* -> 1.7.1]\n- purrr          [* -> 0.3.4]\n- remotes        [* -> 2.4.2]\n- renv           [* -> 0.15.5]\n- rlang          [* -> 1.0.4]\n",
        "- stringi        [* -> 1.7.8]\n- stringr        [* -> 1.4.0]\n- tarchetypes    [* -> 0.6.0]\n- targets        [* -> 0.12.1]\n- tibble         [* -> 3.1.8]\n- tidyselect     [* -> 1.1.2]\n- utf8           [* -> 1.2.2]\n- vctrs          [* -> 0.4.1]\n- withr          [* -> 2.5.0]\n- xfun           [* -> 0.31]\n- yaml           [* -> 2.3.5]\n\n* Lockfile written to 'N:/FDZ/Intern/HiWi-Praktikanten/Mitarbeiter/Thorben/repeated offerings/renv.lock'.\n\nRestarting R session...\n\n"
    ]
}