. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>%
t()
between_ext <- function(data, offsets = offsets) {
# drop time for now
col_names <- offsets$rowname[!offsets$rowname == "time"]
data %<>% select(col_names)
inital <- t(data[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column() %>%
merge(offsets, by = "rowname", all.x = T) %>%
summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
repeated_id <- merge(inital, t(data), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
return(repeated_id)
}
between_ext(latlon_utm)
between_ext <- function(data, offsets = input_offsets) {
# drop time for now
col_names <- offsets$rowname[!offsets$rowname == "time"]
data %<>% select(col_names)
inital <- t(data[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column() %>%
merge(offsets, by = "rowname", all.x = T) %>%
summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
repeated_id <- merge(inital, t(data), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
return(repeated_id)
}
between_ext(latlon_utm)
input_offsets <- tibble::tribble(
~rowname, ~similar_offset, ~exact_offset, ~offset_type,
"wohnflaeche", 0.1, 0.05, "multi",
"etage", 99, 0, "add",
"zimmeranzahl", 0.5, 0, "add",
"time", 0, 6, NA
)
between_ext <- function(data, offsets = input_offsets) {
# drop time for now
col_names <- offsets$rowname[!offsets$rowname == "time"]
data %<>% select(col_names)
inital <- t(data[1, ]) %>%
as_tibble(rownames = NA) %>%
set_colnames("baseline") %>%
rownames_to_column() %>%
merge(offsets, by = "rowname", all.x = T) %>%
summarise(
rowname = rowname,
similar_left = case_when(
offset_type == "add" ~ baseline - similar_offset,
offset_type == "multi" ~ baseline * (1 - similar_offset)
),
similar_right = case_when(
offset_type == "add" ~ baseline + similar_offset,
offset_type == "multi" ~ baseline * (1 + similar_offset)
),
exact_left = case_when(
offset_type == "add" ~ baseline - exact_offset,
offset_type == "multi" ~ baseline * (1 - exact_offset)
),
exact_right = case_when(
offset_type == "add" ~ baseline + exact_offset,
offset_type == "multi" ~ baseline * (1 + exact_offset)
)
)
repeated_id <- merge(inital, t(data), by.x = "rowname", by.y = 0) %>%
summarise(
across(
starts_with("V"),
~ case_when(
. >= exact_left & exact_right >= . ~ 1,
. >= similar_left & similar_right >= . ~ 0,
TRUE ~ -1
)
)
) %>%
summarise(
across(
starts_with("V"),
~ case_when(
-1 %in% . ~ -1,
0 %in% . ~ 0,
TRUE ~ 1
)
)
) %>% t()
return(repeated_id)
}
between_ext(latlon_utm)
latlon_utm %>%  between_ext()
latlon_utm %>% mutate(repeated_id = between_ext())
latlon_utm %>% mutate(repeated_id = between_ext(.))
latlon_utm %>% summarise(repeated_id = between_ext(.))
latlon_utm %<>% arrange(amonths) %>% mutate(repeated_id = between_ext(.))
?while
candidates = latlon_utm %>% filter(repeated_id != -1) %>% mutate(
#to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
#of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
#replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
View(candidates)
latlon_utm %<>% arrange(amonths)
candidates = latlon_utm %>% mutate(repeated_id = between_ext(.))  %>%
filter(repeated_id != -1) %>% mutate(
#to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
#of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
#replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
input_offsets$exact_offset
input_offsets$exact_offset["time"]
input_offsets == "time"
colnames(input_offsets) == "time"
colnames(input_offsets)
input_offsets$rowname == "time"
time_offset = input_offsets$exact_offset[input_offsets$rowname == "time"]
candidates = latlon_utm %>% mutate(repeated_id = between_ext(.))  %>%
filter(repeated_id != -1) %>% mutate(
#to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
#of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
#replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
) %>% filter(td_of_lead >= time_offset)
styler:::style_active_file()
latlon_utm$counting_id[1]
repeated_offerings <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
) %>%
filter(td_of_lead >= time_offset)
ids_to_remove = c(
latlon_utm$counting_id[1],
repeated_offerings$counting_id
)
latlon_utm$counting_id %in% ids_to_remove
latlon_utm %<>% filter(counting_id %in% ids_to_remove)
View(repeated_offerings)
a = latlon_utm
latlon_utm = tar_read(classification_1_7ea63a6c)
classify_data <- function(latlon_utm) {
#move this to settings file or something?
input_offsets <<- tibble::tribble(
~rowname, ~similar_offset, ~exact_offset, ~offset_type,
"wohnflaeche", 0.1, 0.05, "multi",
"etage", 99, 0, "add",
"zimmeranzahl", 0.5, 0, "add",
"time", 0, 6, NA
)
latlon_utm %<>% arrange(amonths)
# extract time offset for readability
time_offset <- input_offsets$exact_offset[input_offsets$rowname == "time"]
while (nrow(latlon_utm) > 0) {
repeates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
) %>%
filter(td_of_lead >= time_offset)
ids_to_remove = unique(c(
latlon_utm$counting_id[1],
repeated_offerings$counting_id
))
latlon_utm %<>% filter(!counting_id %in% ids_to_remove)
repeated_offerings %<>% bind_rows(repeates)
next
}
return(repeated_offerings)
}
classify_data(latlon_utm = latlon_utm)
b = classify_data(latlon_utm = latlon_utm)
View(b)
View(latlon_utm)
repeates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
View(repeates)
repeates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
repeates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
latlon_utm %<>% filter(!counting_id %in% repeates$counting_id)
repeated_offerings %<>% filter(td_of_lead >= time_offset) %>% bind_rows(repeates)
View(repeated_offerings)
latlon_utm = tar_read(classification_1_7ea63a6c)
latlon_utm %<>% arrange(amonths)
repeates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
latlon_utm %<>% filter(!counting_id %in% repeates$counting_id)
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)
latlon_utm = tar_read(classification_1_7ea63a6c)
latlon_utm %<>% arrange(amonths)
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)
rm(repeated_offerings)
repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)
repeated_offerings = c()
repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)
next
latlon_utm = tar_read(classification_1_7ea63a6c)
repeated_offerings = c()
latlon_utm %<>% arrange(amonths)
# extract time offset for readability
time_offset <- input_offsets$exact_offset[input_offsets$rowname == "time"]
while (nrow(latlon_utm) > 0) {
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
latlon_utm %<>% filter(!counting_id %in% candidates$counting_id)
repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)
}
View(repeated_offerings)
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),
obj_parent = counting_id[1]
)
latlon_utm = tar_read(classification_1_7ea63a6c)
repeated_offerings = c()
latlon_utm %<>% arrange(amonths)
# extract time offset for readability
time_offset <- input_offsets$exact_offset[input_offsets$rowname == "time"]
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),
obj_parent = counting_id[1]
)
candidates$obj_parent
latlon_utm = tar_read(classification_1_8fe5d5e3)
View(latlon_utm)
ids_to_remove = candidates$counting_id[candidates$counting_id == 1]
candidates$counting_id
ids_to_remove = candidates$counting_id[candidates$repeated_id == 1]
latlon_utm = tar_read(classification_1_7ea63a6c)
repeated_offerings = c()
latlon_utm %<>% arrange(amonths)
# extract time offset for readability
time_offset <- input_offsets$exact_offset[input_offsets$rowname == "time"]
while (nrow(latlon_utm) > 0) {
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)]),
obj_parent = counting_id[1]
)
ids_to_remove = candidates$counting_id[candidates$repeated_id == 1]
latlon_utm %<>% filter(!counting_id %in% ids_to_remove)
repeated_offerings = candidates %>% filter(td_of_lead >= time_offset) %>% bind_rows(repeated_offerings)
}
View(repeated_offerings)
styler:::style_active_file()
latlon_utm <- tar_read(classification_1_7ea63a6c)
repeated_offerings <- c()
latlon_utm %<>% arrange(amonths)
# extract time offset for readability
time_offset <- input_offsets$exact_offset[input_offsets$rowname == "time"]
while (nrow(latlon_utm) > 0) {
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
ids_to_remove <- candidates$counting_id[candidates$repeated_id == 1]
latlon_utm %<>% filter(!counting_id %in% ids_to_remove)
repeated_offerings <- candidates %>%
filter(td_of_lead >= time_offset) %>%
mutate(
obj_parent = counting_id[1]
) %>%
bind_rows(repeated_offerings)
}
View(repeated_offerings)
latlon_utm <- tar_read(classification_1_36a8c90a)
View(latlon_utm)
candidates <- latlon_utm %>%
mutate(repeated_id = between_ext(.)) %>%
filter(repeated_id != -1) %>%
mutate(
# to last date in data
td_to_end = (as.numeric(data_end_date) - as.numeric(amonths)),
# of leading offering
td_of_lead = (lead(as.numeric(amonths)) - as.numeric(emonths)),
# replace last td_of_lead with td_to_end
td_of_lead = replace_na(td_of_lead, td_to_end[is.na(td_of_lead)])
)
View(candidates)
#run pipelin
library(targets)
tar_visnetwork(targets_only = T)
tar_manifest()
######################
#Package Install and Load
######################
req_library = c(
"targets",
"tarchetypes",
"future",
"future.callr"
)
#used during execution of pipeline
pipeline_library = c(
"here", # creating dynamic paths based on script location
"haven", # reading/writing of dta files
"tidyverse", # data manipulation/wrangeling
"magrittr", #two sided pipe
"fst" # logging utilites
)
library(magrittr)
tar_manifest()
install.packages("renv")
library(renv)
#used during setup of pipeline
renv::init()
